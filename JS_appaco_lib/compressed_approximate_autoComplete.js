var SEARCH_WHOLE_WORD_EACH_TIME=0;var SEARCH_SUFFIX_BY_PREFIXE=1;var SEARCH_DELET_SUFFIX_ALL=2;var PRINT_WORD_LIST=1;var PRINT_WORD_LIST_TOP_K=2;var PRINT_WORD_LIST_TOP_K_byGroup=3;var options={typeSearch:SEARCH_WHOLE_WORD_EACH_TIME,typePrintResults:PRINT_WORD_LIST_TOP_K_byGroup,isExactSearchMethod:false,topK_CHAR_SEPARATOR:'#',words_SEPARATOR:/[\n\r\t\0]+/g,doSort:true,TOPK_SIZE_GROUP:8,delay:300,disabled:false,minLength:1,sourceFromUrl:false,resultsFromUrl:false,score_update_unit:0,item_ID_OnClick_nextResult:'undefined',dataToSend:{SIZE_GROUP:10,minLength:2,delay:300},ajaxRequestMethod:'GET'};function setOption(attribute,value){if(options[attribute])options[attribute]=value}function getOption(attribute){if(options[attribute])return options[attribute]}function approximate_autoComplete(input_id,source,options_in){if(typeof options_in!=='undefined'){for(var options_item in options_in){if(typeof options[options_item]!=='undefined')options[options_item]=options_in[options_item]}}var hide_previeur_result_if_anathoer_call=document.getElementById('_ibra_results_id_to_use_only_if_we_have_another_call');if(hide_previeur_result_if_anathoer_call!==null)hide_previeur_result_if_anathoer_call.style.display='none';var NUM_PAR=8,NUM_OCTETS_RESERVED_BY_NODE=1,trie_construit=false;var TrieInformation={line_table:[],longest_line:0,limit_leaf:0,trie:[],first_node:0,Number_Bytes_Occupied_by_Trie:0};function exact_and_1err_Solution_nodes(){this.list_solution_1error=[];this.exact_solution=-1};_main(input_id,source);var next_result_button;if(options.item_ID_OnClick_nextResult!=='undefined'){next_result_button=document.getElementById(options.item_ID_OnClick_nextResult);next_result_button.onclick=getNext_Result}var isExistNextResult=false;var choices;var pos_node_stop_searsh=-1;var list_solution_1error;var isFirstCall;var searchElement;var results;var selectedResult=-1;function getNext_Result(){if(isExistNextResult&&options.typePrintResults===PRINT_WORD_LIST_TOP_K_byGroup){if(options.isExactSearchMethod){choices=wordList_TopK_byGroup(TrieInformation,pos_node_stop_searsh,options.TOPK_SIZE_GROUP,isFirstCall);displayResults(choices);if(choices.length<options.TOPK_SIZE_GROUP)isExistNextResult=false}else{choices=wordList_exact_1err_TopK_byGroup(TrieInformation,list_solution_1error,options.TOPK_SIZE_GROUP,isFirstCall);displayResults(choices);if(choices.length<options.TOPK_SIZE_GROUP)isExistNextResult=false;console.log("in Next button onClick , isExistNextResult = "+isExistNextResult)}}selectedResult=-1;searchElement.focus()};function displayResults(response){console.log("\n displayResults response.length = %d \n",response.length);results.style.display=response.length?'block':'none';if(response.length){var responseLen=response.length;results.innerHTML='';for(var i=0,div;i<responseLen;i++){div=results.appendChild(document.createElement('div'));div.innerHTML=response[i];div.onclick=function(){chooseResult(this)}}}}function chooseResult(result){searchElement.value=result.innerHTML;results.style.display='none';result.className='';if(options.score_update_unit>0){console.log(" selectedResult = "+selectedResult+" , result.innerHTML == "+result.innerHTML);topK_updating_AllWayNodes_bySearching(result.innerHTML,TrieInformation)}selectedResult=-1;searchElement.focus()}function _main(input_id,source){if(!options.resultsFromUrl){initialize_AutoComplete(source,options)}else{trie_construit=true}var previousRequest;var lastSitring="";var lengPrefixCommon=0;var my_interval_search;searchElement=document.getElementById(input_id);searchElement.setAttribute("autocomplete","off");searchElement.value='';results=document.createElement("div");results.id="_ibra_results_id_to_use_only_if_we_have_another_call";results.className="results";var pos=getOffset(searchElement);results.style.top=pos.top+searchElement.offsetHeight+"px";results.style.left=pos.left+"px";results.style.width=(searchElement.offsetWidth-2)+"px";document.body.appendChild(results);function getOffset(element){var top=0,left=0;do{top+=element.offsetTop;left+=element.offsetLeft}while(element=element.offsetParent);return{top:top,left:left}};function getResults(queryWord){console.log(" getResults : queryWord = "+queryWord);if(queryWord.length<options.minLength){results.style.display='none';lastSitring="";return}if(queryWord===lastSitring)return;console.log(" lastSitring = "+lastSitring+", queryWord = "+queryWord);lengPrefixCommon=utf8_char_len_pgpc(lastSitring,queryWord);console.log("lengPrefixCommun = "+lengPrefixCommon);var startTime=0,elapsedTime=0,endTime=0;startTime=new Date().getTime();if(options.isExactSearchMethod){if(options.typeSearch===SEARCH_WHOLE_WORD_EACH_TIME){pos_node_stop_searsh=searchQueryWord(queryWord,TrieInformation)}else if(options.typeSearch===SEARCH_DELET_SUFFIX_ALL){console.log("avant l'appel lengPrefixCommon = "+lengPrefixCommon);pos_node_stop_searsh=search_Prefix_by_Suffix_Delete(queryWord,lengPrefixCommon,TrieInformation)}else{pos_node_stop_searsh=searchSuffixbyPrefix(queryWord,lengPrefixCommon,TrieInformation)}}else{if(options.typeSearch===SEARCH_WHOLE_WORD_EACH_TIME){list_solution_1error=searchQueryWord_1error(queryWord,TrieInformation)}else if(options.typeSearch===SEARCH_DELET_SUFFIX_ALL){list_solution_1error=search_Prefix_by_Suffix_Delete_1error(queryWord,lengPrefixCommon,TrieInformation)}else{list_solution_1error=searchSuffixbyPrefix_1error(queryWord,lengPrefixCommon,TrieInformation)}}endTime=new Date().getTime();elapsedTime=endTime-startTime;console.log(" search Time = "+elapsedTime);console.log(" pos_node_stop_searsh = %d",pos_node_stop_searsh);startTime=new Date().getTime();if(options.isExactSearchMethod){if(pos_node_stop_searsh!==-1){if(options.typePrintResults===PRINT_WORD_LIST){choices=wordList(TrieInformation,pos_node_stop_searsh);displayResults(choices)}else if(options.typePrintResults===PRINT_WORD_LIST_TOP_K_byGroup){isFirstCall=true;isExistNextResult=true;choices=wordList_TopK_byGroup(TrieInformation,pos_node_stop_searsh,options.TOPK_SIZE_GROUP,isFirstCall);endTime=new Date().getTime();elapsedTime=endTime-startTime;console.log(" wordList_TopK_byGroup Time = "+elapsedTime);displayResults(choices);if(choices.length<options.TOPK_SIZE_GROUP)isExistNextResult=false;isFirstCall=false}else{choices=wordList_TopK(TrieInformation,pos_node_stop_searsh);displayResults(choices)}}else{choices=[];displayResults(choices);console.log("\n no solution ")}}else{if(list_solution_1error.exact_solution!==-1||list_solution_1error.list_solution_1error.length!==0){if(options.typePrintResults===PRINT_WORD_LIST){choices=wordListe_exact_1err(TrieInformation,list_solution_1error);displayResults(choices)}else if(options.typePrintResults===PRINT_WORD_LIST_TOP_K_byGroup){isFirstCall=true;isExistNextResult=true;choices=wordList_exact_1err_TopK_byGroup(TrieInformation,list_solution_1error,options.TOPK_SIZE_GROUP,isFirstCall);endTime=new Date().getTime();elapsedTime=endTime-startTime;console.log(" wordList_exact_1err_TopK_byGroup Time = "+elapsedTime+" nb mot sol = "+choices.length);displayResults(choices);if(choices.length<options.TOPK_SIZE_GROUP)isExistNextResult=false;isFirstCall=false;console.log("in keyUp , isExistNextResult = "+isExistNextResult)}else{choices=wordList_exact_1err_TopK(TrieInformation,list_solution_1error);displayResults(choices)}}else{choices=[];displayResults(choices);console.log("\n no solution ")}}lastSitring=queryWord}function getResults_fromServer(queryWord){if(queryWord.length<options.minLength){results.style.display='none';return}if(queryWord===lastSitring)return;if(previousRequest&&previousRequest.readyState<4){previousRequest.abort()}var xhr=new XMLHttpRequest();xhr.onreadystatechange=function(){if(xhr.readyState===4&&xhr.status===200){choices=JSON.parse(xhr.responseText);displayResults(choices)}};var my_url=source;var my_url_data='queryWord='+encodeURIComponent(queryWord);for(var data_item in options.dataToSend){my_url_data+='&'+data_item+'='+encodeURIComponent(options.dataToSend[data_item])}if(options.ajaxRequestMethod==='GET'){my_url+='?'+my_url_data;xhr.open('GET',my_url);xhr.send(null)}else{xhr.open('POST',my_url);xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");xhr.send(my_url_data)}previousRequest=xhr;lastSitring=queryWord}searchElement.onkeyup=function(e){if(trie_construit===false){alert(" you should build the dictionary first");return false}e=e||window.event;var divs=results.getElementsByTagName('div');if(e.keyCode===38&&selectedResult>-1){divs[selectedResult--].className='';if(selectedResult>-1){divs[selectedResult].className='result_focus'}}else if(e.keyCode===40&&selectedResult<divs.length-1){results.style.display='block';if(selectedResult>-1){divs[selectedResult].className=''}divs[++selectedResult].className='result_focus'}else if(e.keyCode===13&&selectedResult>-1){chooseResult(divs[selectedResult])}else if(e.ctrlKey&&e.keyCode===39){getNext_Result()}else{clearTimeout(my_interval_search);my_interval_search=setTimeout(function(){if(options.resultsFromUrl){getResults_fromServer(searchElement.value)}else{getResults(searchElement.value)}},options.delay);selectedResult=-1}};function utf8_char_len_pgpc(str1,str2){var i=0,length=(str1.length<str2.length)?str1.length:str2.length;while(i<length&&str1.charAt(i)===str2.charAt(i))i++;return i}}var result_fromURL;function initialize_AutoComplete(source,options){var TextInformation={text:"",size_text:0,nb_line:0,longest_line:0,line_table:[]};var Construct_Trie={text_info:{},topK_tab:[],long_pref_line_next:[],file_last_nodes:[],file_last_nodes_counter:0,linking_nodes:[],nodes:[],last_node:0,pos_code:0,limit_leaf:0,local_size:0,trie:[],size_trie:0,first_node:0,Number_Bytes_Occupied_by_Trie:0};if(toType(source)==="string"){if(options.sourceFromUrl){var xhr=new XMLHttpRequest();xhr.open('GET',source);xhr.onreadystatechange=function(){if(xhr.readyState===4&&xhr.status===200){result_fromURL=xhr.responseText;trie_coding_fromString(result_fromURL,options)}else if(xhr.readyState===4&&xhr.status!==200){alert('Une erreur est survenue !\n\nCode :'+xhr.status+'\nTexte : '+xhr.statusText)}};xhr.send(null)}else{trie_coding_fromString(source,options)}}else if(toType(source)==="array"){if(toType(source[0])==="string"){trie_coding_fromArray(source,options)}else if(toType(source[0])==="object"){trie_coding_fromTabObject(source,options)}else if(toType(source[0])==="array"){trie_coding_fromArray_OfArray(source,options)}}function toType(obj){return({}).toString.call(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase()};function trie_coding(){calculLongestPrefixLines(Construct_Trie);nodesIdentify(Construct_Trie);spaceDeterminingForTrie(Construct_Trie);fillingTrie(Construct_Trie);maxTopK_update(Construct_Trie.first_node,Construct_Trie);TrieInformation.first_node=Construct_Trie.first_node;TrieInformation.limit_leaf=Construct_Trie.limit_leaf;TrieInformation.longest_line=Construct_Trie.text_info.longest_line;TrieInformation.line_table=Construct_Trie.text_info.line_table;TrieInformation.trie=Construct_Trie.trie;trie_construit=true;alert(" trie_construit == true ")};function trie_coding_fromString(source,options){TextInformation.text=source;TextInformation.size_text=source.lenght;cuttingTextIntoLines(TextInformation,options.words_SEPARATOR);get_nb_line_longest_line(TextInformation);if(options.doSort){TextInformation.line_table.sort(function(a,b){return a.localeCompare(b)})}Construct_Trie.text_info=TextInformation;get_TopK_fromLines(Construct_Trie,options.topK_CHAR_SEPARATOR);trie_coding()};function trie_coding_fromArray(source,options){TextInformation.line_table=source;get_nb_line_longest_line(TextInformation);if(options.doSort){TextInformation.line_table.sort(function(a,b){return a.localeCompare(b)})}Construct_Trie.text_info=TextInformation;if(!options.topK_CHAR_SEPARATOR){initialize_topK_tab(Construct_Trie)}else{console.log(" CHAR_SEPARATOR is defined donc : get_TopK_fromLines ");get_TopK_fromLines(Construct_Trie,CHAR_SEPARATOR)}trie_coding()};function trie_coding_fromTabObject(source,options){if(options.doSort){source.sort(function(a,b){return a.label.localeCompare(b.label)})}TextInformation.line_table=new Array(source.length);Construct_Trie.topK_tab=new Array(source.length);for(var i=0;i<source.length;i++){TextInformation.line_table[i]=source[i].label;Construct_Trie.topK_tab[i]=source[i].value}get_nb_line_longest_line(TextInformation);Construct_Trie.text_info=TextInformation;trie_coding()};function trie_coding_fromArray_OfArray(source,options){if(options.doSort){source.sort(function(a,b){return a[0].localeCompare(b[0])})}TextInformation.line_table=new Array(source.length);Construct_Trie.topK_tab=new Array(source.length);for(var i=0;i<source.length;i++){TextInformation.line_table[i]=source[i][0];Construct_Trie.topK_tab[i]=source[i][1]}get_nb_line_longest_line(TextInformation);Construct_Trie.text_info=TextInformation;trie_coding()};function utf8_nb_line_text(text,length){var i=0,nl=0;while(i<length){if((text.charAt(i)==='\n')||(text.charAt(i)==='\r')||(text.charAt(i)==='\0')){nl++}i++}return nl};function cuttingTextIntoLines(text_info,regExp){text_info.text=text_info.text.trim();text_info.line_table=text_info.text.split(regExp)};function get_nb_line_longest_line(text_info){text_info.longest_line=0;text_info.nb_line=text_info.line_table.length;for(i=0;i<text_info.nb_line;i++){if(text_info.line_table[i].length>text_info.longest_line){text_info.longest_line=text_info.line_table[i].length}}};function initialize_topK_tab(trie_build){trie_build.topK_tab=new Array(trie_build.text_info.nb_line);for(var i=0;i<trie_build.text_info.nb_line;i++){trie_build.topK_tab[i]=0}};function get_TopK_fromLines(trie_build,CHAR_SEPARATOR){var regx=new RegExp(''+CHAR_SEPARATOR+'[0-9]+$'),k=0,str_lenght=0,pos_separator;trie_build.text_info.longest_line=0;initialize_topK_tab(trie_build);for(k=0;k<trie_build.text_info.nb_line;k++){pos_separator=trie_build.text_info.line_table[k].search(regx);if(pos_separator>0){trie_build.topK_tab[k]=(parseInt(trie_build.text_info.line_table[k].substring(pos_separator+1),10));trie_build.text_info.line_table[k]=trie_build.text_info.line_table[k].substring(0,pos_separator)}str_lenght=trie_build.text_info.line_table[k].length;if(str_lenght>trie_build.text_info.longest_line){trie_build.text_info.longest_line=str_lenght}}};function calculLongestPrefixLines(trie_build){for(var k=0;k<trie_build.text_info.nb_line-1;k++){trie_build.long_pref_line_next.push(utf8_char_len_pgpc(trie_build.text_info.line_table[k],trie_build.text_info.line_table[k+1]))}};function utf8_char_len_pgpc(str1,str2){var i=0,length=(str1.length<str2.length)?str1.length:str2.length;while(i<length&&str1.charAt(i)===str2.charAt(i))i++;return i};function nodesIdentify(trie_build){var k=0,node_tmp=0,node_pointed=0,node_father=0;trie_build.file_last_nodes=new Array(trie_build.text_info.longest_line);trie_build.file_last_nodes_counter=0;trie_build.linking_nodes=new Array(1+trie_build.text_info.longest_line);for(k=0;k<=trie_build.text_info.longest_line;k++){trie_build.linking_nodes[k]=-1}trie_build.nodes=new Array(trie_build.text_info.nb_line*NUM_PAR*2+2*NUM_PAR);trie_build.last_node=-NUM_PAR;add_node(trie_build,1,0,0,0,0,-1);add_node(trie_build,0,0,trie_build.text_info.line_table[0].length,0,0,0);trie_build.file_last_nodes[0]=0;trie_build.file_last_nodes[1]=NUM_PAR;trie_build.file_last_nodes_counter=1;for(k=1;k<trie_build.text_info.nb_line;k++){node_tmp=trie_build.file_last_nodes[trie_build.file_last_nodes_counter];if(trie_build.long_pref_line_next[k-1]>=trie_build.nodes[node_tmp+2]){if(trie_build.text_info.line_table[k].length===trie_build.long_pref_line_next[k-1]){console.log("Lines %d and %d are identical !\n",trie_build.nodes[node_tmp+3],k)}else{node_tmp=trie_build.file_last_nodes[--trie_build.file_last_nodes_counter];node_pointed=trie_build.file_last_nodes[trie_build.file_last_nodes_counter+1];add_node(trie_build,2,0,trie_build.long_pref_line_next[k-1],k,0,node_tmp);node_father=trie_build.last_node;trie_build.nodes[node_pointed+5]=trie_build.last_node;trie_build.file_last_nodes[++trie_build.file_last_nodes_counter]=trie_build.last_node;add_node(trie_build,0,0,trie_build.text_info.line_table[k].length,k,0,node_father);trie_build.file_last_nodes[++trie_build.file_last_nodes_counter]=trie_build.last_node}}else{while(trie_build.long_pref_line_next[k-1]<trie_build.nodes[node_tmp+2]){node_tmp=trie_build.file_last_nodes[--trie_build.file_last_nodes_counter]}if(trie_build.long_pref_line_next[k-1]>trie_build.nodes[node_tmp+2]){node_pointed=trie_build.file_last_nodes[trie_build.file_last_nodes_counter+1];add_node(trie_build,2,0,trie_build.long_pref_line_next[k-1],k,0,node_tmp);node_father=trie_build.last_node;trie_build.nodes[node_pointed+5]=trie_build.last_node;trie_build.file_last_nodes[++trie_build.file_last_nodes_counter]=trie_build.last_node}else{trie_build.nodes[node_tmp]++;node_father=node_tmp}add_node(trie_build,0,0,trie_build.text_info.line_table[k].length,k,0,node_father);trie_build.file_last_nodes[++trie_build.file_last_nodes_counter]=trie_build.last_node}}};function modifies_node(trie_build,nb_trans,tot_8,depth,seq_num,tot_trans,p_father){trie_build.nodes[trie_build.last_node]=nb_trans;trie_build.nodes[trie_build.last_node+1]=tot_8;trie_build.nodes[trie_build.last_node+2]=depth;trie_build.nodes[trie_build.last_node+3]=seq_num;trie_build.nodes[trie_build.last_node+4]=tot_trans;trie_build.nodes[trie_build.last_node+5]=p_father;trie_build.nodes[trie_build.last_node+6]=trie_build.linking_nodes[depth];trie_build.nodes[trie_build.last_node+7]=-1;trie_build.linking_nodes[depth]=trie_build.last_node};function add_node(trie_build,nb_trans,tot_8,depth,seq_num,tot_trans,p_father){trie_build.last_node+=NUM_PAR;modifies_node(trie_build,nb_trans,tot_8,depth,seq_num,tot_trans,p_father)};function spaceDeterminingForTrie(trie_build){var father=0,k=0,node_tmp=0;for(k=0;k<=trie_build.last_node;k+=NUM_PAR){if(trie_build.nodes[k]===0){trie_build.local_size=2;if(trie_build.nodes[k+5]>-1){father=trie_build.nodes[k+5];trie_build.nodes[father+4]+=3;trie_build.nodes[father+1]+=1}trie_build.nodes[k+7]=trie_build.pos_code;trie_build.pos_code+=trie_build.local_size}}trie_build.limit_leaf=trie_build.pos_code;for(k=trie_build.text_info.longest_line;k>=0;k--){node_tmp=trie_build.linking_nodes[k];while(node_tmp>-1){if(trie_build.nodes[node_tmp]!==0){trie_build.local_size=3+trie_build.nodes[node_tmp+1]+trie_build.nodes[node_tmp+4];if(trie_build.nodes[node_tmp+5]>-1){father=trie_build.nodes[node_tmp+5];trie_build.nodes[father+4]+=3;trie_build.nodes[father+1]+=1}trie_build.nodes[node_tmp+7]=trie_build.pos_code;trie_build.pos_code+=trie_build.local_size}node_tmp=trie_build.nodes[node_tmp+6]}}trie_build.Number_Bytes_Occupied_by_Trie=trie_build.pos_code};function fillingTrie(trie_build){var k=0,beg_utf8,father;trie_build.trie=new Array(trie_build.pos_code);trie_build.size_trie=trie_build.pos_code;trie_build.pos_code=0;for(k=0;k<=trie_build.last_node;k+=NUM_PAR){trie_build.pos_code=trie_build.nodes[k+7];if(trie_build.nodes[k]!==0){trie_build.local_size=trie_build.pos_code+1;trie_build.trie[trie_build.local_size]=trie_build.nodes[k+3];trie_build.local_size+=1;trie_build.trie[trie_build.local_size]=trie_build.nodes[k];trie_build.local_size+=1;beg_utf8=trie_build.local_size;trie_build.local_size+=trie_build.nodes[k+1];trie_build.nodes[k+1]=beg_utf8;trie_build.nodes[k+4]=trie_build.local_size}else{trie_build.local_size=trie_build.pos_code+1;trie_build.trie[trie_build.pos_code]=trie_build.topK_tab[trie_build.nodes[k+3]];trie_build.trie[trie_build.local_size]=trie_build.nodes[k+3]}}for(k=0;k<=trie_build.last_node;k+=NUM_PAR){if(trie_build.nodes[k+5]>-1){father=trie_build.nodes[k+5];trie_build.pos_code=trie_build.nodes[father+1];trie_build.trie[trie_build.pos_code]=trie_build.text_info.line_table[trie_build.nodes[k+3]].charAt(trie_build.nodes[father+2]);trie_build.nodes[father+1]+=1}}for(k=0;k<=trie_build.last_node;k+=NUM_PAR){if(trie_build.nodes[k+5]>-1){father=trie_build.nodes[k+5];trie_build.pos_code=trie_build.nodes[father+1];trie_build.trie[trie_build.pos_code]=trie_build.nodes[father+2];trie_build.pos_code+=1;trie_build.trie[trie_build.pos_code]=trie_build.nodes[k+2]-trie_build.nodes[father+2];trie_build.pos_code+=1;trie_build.trie[trie_build.pos_code]=trie_build.nodes[k+7];trie_build.pos_code+=1;trie_build.nodes[father+1]=trie_build.pos_code}}trie_build.first_node=trie_build.nodes[7]};function maxTopK_update(nodeToGetTopK,trie_build){var nb_trans=0,pointed_node=0,k=0,max_TopK_ofTransitionNode=0,tomp_max=0,pos_code=nodeToGetTopK;if(pos_code<trie_build.limit_leaf){tomp_max=trie_build.trie[nodeToGetTopK];if(tomp_max>max_TopK_ofTransitionNode){max_TopK_ofTransitionNode=tomp_max}}else{pos_code+=2;nb_trans=trie_build.trie[pos_code++];pos_code+=nb_trans;for(k=0;k<nb_trans;k++){pos_code+=2;pointed_node=trie_build.trie[pos_code++];tomp_max=maxTopK_update(pointed_node,trie_build);if(tomp_max>max_TopK_ofTransitionNode){max_TopK_ofTransitionNode=tomp_max}}}trie_build.trie[nodeToGetTopK]=max_TopK_ofTransitionNode;return max_TopK_ofTransitionNode};function printingWholeTrie(text,longest_line,trie,first_node,limit_leaf,num_octet_by_node){var stmp,nb_sequence,nb_trans,pointed_node,pos_code,file_last_nodes=new Array(longest_line),file_last_nodes_counter=0,k=0;file_last_nodes[0]=first_node;while(file_last_nodes_counter>=0){pos_code=file_last_nodes[file_last_nodes_counter];if(pos_code<limit_leaf){nb_sequence=trie[pos_code+num_octet_by_node];console.log("leaf corresponding to sequence ->");console.log("%s",text[nb_sequence]);console.log("\n");file_last_nodes_counter--}else{pos_code+=num_octet_by_node;nb_sequence=trie[pos_code];pos_code+=1;nb_trans=trie[pos_code];pos_code+=1;console.log("\n Transition characters:");for(k=0;k<nb_trans;k++){stmp=trie[pos_code];console.log(" char num %d = ",k);console.log("%s ,",stmp);pos_code++}console.log("\n");file_last_nodes_counter--;for(k=0;k<nb_trans;k++){pos_code+=2;pointed_node=trie[pos_code++];file_last_nodes[++file_last_nodes_counter]=pointed_node}console.log("\n")}}}};var lasteQueryWord_size=0,pos_LastNode=-1,tab_nodes_way=null,tab_nodes_way_counter=0,isSolutionExist=false,pos_last_node_char_tested=0;function searchQueryWord(pattern,trie_info){var line_table=trie_info.line_table,trie=trie_info.trie,firstNode=trie_info.first_node,i=0,p=0,k=0,nb_sequence=0,nb_trans=0,pointer_sequence=0,length_transition=0,pointed_node=0,pos_code=firstNode,nb_letters=pattern.length;if(nb_letters===0)return-1;while(k<nb_letters){pos_code+=2;nb_trans=trie[pos_code++];for(i=0;i<nb_trans;i++){if(pattern.charAt(k)===trie[pos_code])break;pos_code+=1}if(i===nb_trans){break}else{pos_code+=(nb_trans-i);pos_code+=i*3;pointer_sequence=trie[pos_code++];length_transition=trie[pos_code++];pointed_node=trie[pos_code++];nb_sequence=trie[pointed_node+1];k+=1;pointer_sequence+=1;length_transition-=1;p=0;while(p<length_transition&&k<nb_letters){if(pattern.charAt(k)!==line_table[nb_sequence].charAt(pointer_sequence))break;p+=1;k+=1;pointer_sequence+=1}if(p===length_transition){pos_code=pointed_node}else{if(k===nb_letters)break;return-1}}}if(k===nb_letters){return pointed_node}return-1};function searchSuffixbyPrefix(pattern,lengPrefixCommon,trie_info){var line_table=trie_info.line_table,trie=trie_info.trie,firstNode=trie_info.first_node,i=0,p=0,k=0,nb_sequence=0,nb_trans=0,pointer_sequence=0,length_transition=0,pointed_node=0,pos_code=firstNode,last_pointed_node=pointed_node=firstNode,nb_letters=pattern.length;if(nb_letters===0){lasteQueryWord_size=0;pos_last_node_char_tested=0;pos_LastNode=firstNode;return-1}if(lengPrefixCommon>0&&lengPrefixCommon===lasteQueryWord_size){if(isSolutionExist){k=pos_last_node_char_tested;pos_code=pos_LastNode;last_pointed_node=pointed_node=pos_LastNode}else{lasteQueryWord_size=nb_letters;isSolutionExist=false;return-1}}else{pos_last_node_char_tested=0;pos_LastNode=firstNode}while(k<nb_letters){pos_code+=2;nb_trans=trie[pos_code++];for(i=0;i<nb_trans;i++){if(pattern.charAt(k)===trie[pos_code])break;pos_code+=1}if(i===nb_trans){break}else{pos_code+=(nb_trans-i);pos_code+=i*3;pointer_sequence=trie[pos_code++];length_transition=trie[pos_code++];pointed_node=trie[pos_code++];nb_sequence=trie[pointed_node+1];k+=1;pointer_sequence+=1;length_transition-=1;p=0;while(p<length_transition&&k<nb_letters){if(pattern.charAt(k)!==line_table[nb_sequence].charAt(pointer_sequence))break;p+=1;k+=1;pointer_sequence+=1}if(p===length_transition){pos_code=pointed_node;last_pointed_node=pointed_node;pos_last_node_char_tested=k}else{if(k===nb_letters)break;lasteQueryWord_size=nb_letters;isSolutionExist=false;pos_last_node_char_tested=0;pos_LastNode=firstNode;return-1}}}if(k===nb_letters){lasteQueryWord_size=k;pos_LastNode=last_pointed_node;isSolutionExist=true;return pointed_node}else{isSolutionExist=false;lasteQueryWord_size=nb_letters;pos_last_node_char_tested=0;pos_LastNode=firstNode}return-1};function search_Prefix_by_Suffix_Delete(pattern,lengPrefixCommon,trie_info){var line_table=trie_info.line_table,trie=trie_info.trie,firstNode=trie_info.first_node,longest_line=trie_info.longest_line,i=0,p=0,k=0,nb_sequence=0,nb_trans=0,pointer_sequence=0,length_transition=0,pointed_node=0,pos_code=firstNode,last_pointed_node=pointed_node=firstNode,nb_letters=pattern.length;if(tab_nodes_way===null)tab_nodes_way=new Array(longest_line);if(nb_letters===0){lasteQueryWord_size=0;pos_last_node_char_tested=0;pos_LastNode=firstNode;return-1}if(lengPrefixCommon===0){for(tab_nodes_way_counter=0;tab_nodes_way_counter<longest_line;tab_nodes_way_counter++){tab_nodes_way[tab_nodes_way_counter]=-1}tab_nodes_way_counter=0;tab_nodes_way[tab_nodes_way_counter]=firstNode;pos_last_node_char_tested=0;pos_LastNode=firstNode}else{if(lengPrefixCommon===lasteQueryWord_size){if(isSolutionExist){k=pos_last_node_char_tested;pos_code=pos_LastNode;last_pointed_node=pointed_node=pos_LastNode}else{lasteQueryWord_size=nb_letters;isSolutionExist=false;return-1}}else if(lengPrefixCommon<lasteQueryWord_size){tab_nodes_way_counter=lengPrefixCommon;while(tab_nodes_way[tab_nodes_way_counter]===-1){tab_nodes_way_counter--}pos_code=tab_nodes_way[tab_nodes_way_counter];k=tab_nodes_way_counter;pos_last_node_char_tested=k;last_pointed_node=pointed_node=pos_code;while(tab_nodes_way_counter<longest_line){tab_nodes_way_counter++;tab_nodes_way[tab_nodes_way_counter]=-1}}}while(k<nb_letters){pos_code+=2;nb_trans=trie[pos_code++];for(i=0;i<nb_trans;i++){if(pattern.charAt(k)===trie[pos_code])break;pos_code+=1}if(i===nb_trans){break}else{pos_code+=(nb_trans-i);pos_code+=i*3;pointer_sequence=trie[pos_code++];length_transition=trie[pos_code++];pointed_node=trie[pos_code++];nb_sequence=trie[pointed_node+1];k+=1;pointer_sequence+=1;length_transition-=1;p=0;while(p<length_transition&&k<nb_letters){if(pattern.charAt(k)!==line_table[nb_sequence].charAt(pointer_sequence))break;p+=1;k+=1;pointer_sequence+=1}if(p===length_transition){pos_code=pointed_node;last_pointed_node=pointed_node;pos_last_node_char_tested=k;tab_nodes_way_counter=k;tab_nodes_way[tab_nodes_way_counter]=pos_code}else{if(k===nb_letters)break;lasteQueryWord_size=nb_letters;isSolutionExist=false;pos_last_node_char_tested=0;pos_LastNode=firstNode;return-1}}}if(k===nb_letters){lasteQueryWord_size=k;pos_LastNode=last_pointed_node;isSolutionExist=true;return pointed_node}else{isSolutionExist=false;lasteQueryWord_size=nb_letters;pos_last_node_char_tested=0;pos_LastNode=firstNode}return-1};function topK_updating_AllWayNodes_bySearching(pattern,trie_info){var line_table=trie_info.line_table,trie=trie_info.trie,firstNode=trie_info.first_node,list_way_info=[],topK_value,i=0,p=0,nb_letters=pattern.length,k=0,nb_sequence=0,nb_trans=0,pointer_sequence=0,pointed_node=0,length_transition=0,pos_code=firstNode;if(nb_letters===0)return;list_way_info.push(firstNode);while(k<nb_letters){pos_code+=2;nb_trans=trie[pos_code++];for(i=0;i<nb_trans;i++){if(pattern.charAt(k)===trie[pos_code])break;pos_code+=1}if(i===nb_trans){break}else{pos_code+=(nb_trans-i);pos_code+=i*3;pointer_sequence=trie[pos_code++];length_transition=trie[pos_code++];pointed_node=trie[pos_code++];nb_sequence=trie[pointed_node+1];k+=1;pointer_sequence+=1;length_transition-=1;p=0;while(p<length_transition&&k<nb_letters){if(pattern.charAt(k)!==line_table[nb_sequence].charAt(pointer_sequence))break;p+=1;k+=1;pointer_sequence+=1}if(p===length_transition){pos_code=pointed_node;list_way_info.push(pos_code)}else{if(k===nb_letters)break;return}}}if(k===nb_letters){pos_code=pointed_node;pos_code+=2;nb_trans=trie[pos_code++];if(nb_trans!==0){for(i=0;i<nb_trans;i++){if(pattern.charAt(k)===trie[pos_code])break;pos_code+=1}if(i!==nb_trans){pos_code+=(nb_trans-i);pos_code+=i*3;pointer_sequence=trie[pos_code++];length_transition=trie[pos_code++];pointed_node=trie[pos_code++];nb_sequence=trie[pointed_node+1];pos_code=pointed_node;list_way_info.push(pos_code)}}pos_code=list_way_info[list_way_info.length-1];topK_value=trie[pos_code];topK_value+=options.score_update_unit;console.log(" node = "+pos_code+" , topK = "+trie[pos_code]+", sequnec = "+line_table[trie[pos_code+1]]);var indice=0,sizeList_way_info=list_way_info.length;for(indice=0;indice<sizeList_way_info;indice++){if(topK_value>trie[list_way_info[indice]]){trie[list_way_info[indice]]=topK_value}}}return};var branch_charLevels=null,branch_trans_num=null,branch_nodes=null,branch_node_trans_chunk=null,idx_path=0;function searchQueryWord_1error(pattern,trie_info){var line_table=trie_info.line_table,trie=trie_info.trie,longest_line=trie_info.longest_line,firstNode=trie_info.first_node,listSolution=new exact_and_1err_Solution_nodes(),list_solution_1error={},i=0,p=0,k=0,nb_sequence=0,nb_trans=0,pointer_sequence=0,length_transition=0,pos_code=firstNode,pointed_node=firstNode,isExactSolutionFound=false,nbChar_rest_to_test_inTransition=0,nb_letters=pattern.length;if(nb_letters===0)return listSolution;if(branch_charLevels===null){branch_charLevels=new Array(longest_line+1);branch_trans_num=new Array(longest_line+1);branch_nodes=new Array(longest_line+1);branch_node_trans_chunk=new Array(longest_line+1)}idx_path=0;while(k<nb_letters){branch_nodes[idx_path]=pos_code;pos_code+=2;nb_trans=trie[pos_code++];for(i=0;i<nb_trans;i++){if(pattern.charAt(k)===trie[pos_code])break;pos_code+=1}branch_charLevels[idx_path]=k;branch_trans_num[idx_path]=i;if(i===nb_trans){branch_node_trans_chunk[idx_path++]=pos_code;break}else{pos_code+=(nb_trans-i);branch_node_trans_chunk[idx_path++]=pos_code;pos_code+=i*3;pointer_sequence=trie[pos_code++];length_transition=trie[pos_code++];pointed_node=trie[pos_code++];nb_sequence=trie[pointed_node+1];k+=1;pointer_sequence+=1;length_transition-=1;p=0;while(p<length_transition&&k<nb_letters){if(pattern.charAt(k)!==line_table[nb_sequence].charAt(pointer_sequence))break;p+=1;k+=1;pointer_sequence+=1}if(p===length_transition){pos_code=pointed_node}else{if(k===nb_letters)break;break}}}if(k===nb_letters){isExactSolutionFound=true;listSolution.exact_solution=pointed_node}nbChar_rest_to_test_inTransition=length_transition-p;test_OneError(trie_info,pattern,nb_letters,k,pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error,isExactSolutionFound);for(var val in list_solution_1error){listSolution.list_solution_1error.push(list_solution_1error[val])}return listSolution};function edit_Distance(trie_info,pattern,nb_letters,k,pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error){edit_Distance_DELET(trie_info,pattern,nb_letters,k,pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error);edit_Distance_INSERT(trie_info,pattern,nb_letters,k,pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error);edit_Distance_SUBST(trie_info,pattern,nb_letters,k,pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error)};function edit_Distance_SUBST(trie_info,pattern,nb_letters,save_k,save_pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error){var k=save_k+1,pointer_sequence=save_pointer_sequence+1,length_transition=nbChar_rest_to_test_inTransition-1;var nodeSolution=searchWildcare(pattern,trie_info,pointer_sequence,k,length_transition,nb_letters,pos_code,pointed_node);if(nodeSolution!==-1){if(!list_solution_1error[nodeSolution])list_solution_1error[nodeSolution]=nodeSolution}};function edit_Distance_DELET(trie_info,pattern,nb_letters,save_k,pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error){var k=save_k+1;var nodeSolution=searchWildcare(pattern,trie_info,pointer_sequence,k,nbChar_rest_to_test_inTransition,nb_letters,pos_code,pointed_node);if(nodeSolution!==-1){if(!list_solution_1error[nodeSolution])list_solution_1error[nodeSolution]=nodeSolution}};function edit_Distance_INSERT(trie_info,pattern,nb_letters,save_k,save_pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error){var pointer_sequence=save_pointer_sequence+1,length_transition=nbChar_rest_to_test_inTransition-1;var nodeSolution=searchWildcare(pattern,trie_info,pointer_sequence,save_k,length_transition,nb_letters,pos_code,pointed_node);if(nodeSolution!==-1){if(!list_solution_1error[nodeSolution])list_solution_1error[nodeSolution]=nodeSolution}};function all_wayNodes(trie_info,pattern,nb_letters,list_solution_1error){var nbranches=idx_path,pos_code=0,nb_trans=0,j=0,p=0,pointer_sequence=0,length_transition=0,pointed_node=0;for(idx_path=0;idx_path<nbranches;idx_path++){pos_code=branch_nodes[idx_path];pos_code+=2;nb_trans=trie_info.trie[pos_code++];for(j=0;j<nb_trans;j++){if(branch_trans_num[idx_path]===j){continue}pos_code=branch_node_trans_chunk[idx_path];pos_code+=j*3;pointer_sequence=trie_info.trie[pos_code++];length_transition=trie_info.trie[pos_code++];pointed_node=trie_info.trie[pos_code++];edit_Distance(trie_info,pattern,nb_letters,branch_charLevels[idx_path],pointer_sequence,length_transition,pos_code,pointed_node,list_solution_1error)}}};function test_OneError(trie_info,pattern,nb_letters,k,pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error,isExactSolutionFound){if(!isExactSolutionFound){edit_Distance(trie_info,pattern,nb_letters,k,pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error);all_wayNodes(trie_info,pattern,nb_letters,list_solution_1error)}else{all_wayNodes(trie_info,pattern,nb_letters,list_solution_1error)}};function searchWildcare(pattern,trie_info,pointer_sequence,k,length_transition,nb_letters,pos_code,pointed_node){var line_table=trie_info.line_table,p=0,nb_sequence=trie_info.trie[pointed_node+1],pos_node_stop_searsh,save_first_node;while(p<length_transition&&k<nb_letters){if(pattern.charAt(k)!==line_table[nb_sequence].charAt(pointer_sequence))break;p+=1;k+=1;pointer_sequence+=1}if(p===length_transition){pos_code=pointed_node;pos_node_stop_searsh=pointed_node;if(k!==nb_letters){save_first_node=trie_info.first_node;trie_info.first_node=pointed_node;pos_node_stop_searsh=searchQueryWord_from_idx_pattern(pattern,k,trie_info);trie_info.first_node=save_first_node}return pos_node_stop_searsh}else{if(k===nb_letters){return pointed_node}return-1}return-1};function searchQueryWord_from_idx_pattern(pattern,idx,trie_info){var line_table=trie_info.line_table,trie=trie_info.trie,firstNode=trie_info.first_node,i=0,p=0,k=idx,nb_sequence=0,nb_trans=0,pointer_sequence=0,length_transition=0,pointed_node=0,pos_code=firstNode,nb_letters=pattern.length;if(nb_letters===0)return-1;while(k<nb_letters){pos_code+=2;nb_trans=trie[pos_code++];for(i=0;i<nb_trans;i++){if(pattern.charAt(k)===trie[pos_code])break;pos_code+=1}if(i===nb_trans){break}else{pos_code+=(nb_trans-i);pos_code+=i*3;pointer_sequence=trie[pos_code++];length_transition=trie[pos_code++];pointed_node=trie[pos_code++];nb_sequence=trie[pointed_node+1];k+=1;pointer_sequence+=1;length_transition-=1;p=0;while(p<length_transition&&k<nb_letters){if(pattern.charAt(k)!==line_table[nb_sequence].charAt(pointer_sequence))break;p+=1;k+=1;pointer_sequence+=1}if(p===length_transition){pos_code=pointed_node}else{if(k===nb_letters)break;return-1}}}if(k===nb_letters){return pointed_node}return-1};function searchSuffixbyPrefix_1error(pattern,lengPrefixCommon,trie_info){var line_table=trie_info.line_table,trie=trie_info.trie,longest_line=trie_info.longest_line,firstNode=trie_info.first_node,listSolution=new exact_and_1err_Solution_nodes(),list_solution_1error={},i=0,p=0,k=0,nb_sequence=0,nb_trans=0,pointer_sequence=0,pointed_node=0,length_transition=0,pos_code=firstNode,last_pointed_node=pointed_node=firstNode,isExactSolutionFound=false,nbChar_rest_to_test_inTransition=0,nb_letters=pattern.length;if(nb_letters===0){lasteQueryWord_size=0;pos_last_node_char_tested=0;pos_LastNode=firstNode;idx_path=0;return listSolution}if(branch_charLevels===null){branch_charLevels=new Array(longest_line+1);branch_trans_num=new Array(longest_line+1);branch_nodes=new Array(longest_line+1);branch_node_trans_chunk=new Array(longest_line+1)}if(lengPrefixCommon>0&&lengPrefixCommon===lasteQueryWord_size){if(isSolutionExist){k=pos_last_node_char_tested;pos_code=pos_LastNode;last_pointed_node=pointed_node=pos_LastNode}else{lasteQueryWord_size=nb_letters;isSolutionExist=false}}else{pos_last_node_char_tested=0;pos_LastNode=firstNode;idx_path=0}while(k<nb_letters){branch_nodes[idx_path]=pos_code;pos_code+=2;nb_trans=trie[pos_code++];for(i=0;i<nb_trans;i++){if(pattern.charAt(k)===trie[pos_code])break;pos_code+=1}branch_charLevels[idx_path]=k;branch_trans_num[idx_path]=i;if(i===nb_trans){branch_node_trans_chunk[idx_path++]=pos_code;break}else{pos_code+=(nb_trans-i);branch_node_trans_chunk[idx_path++]=pos_code;pos_code+=i*3;pointer_sequence=trie[pos_code++];length_transition=trie[pos_code++];pointed_node=trie[pos_code++];nb_sequence=trie[pointed_node+1];k+=1;pointer_sequence+=1;length_transition-=1;p=0;while(p<length_transition&&k<nb_letters){if(pattern.charAt(k)!==line_table[nb_sequence].charAt(pointer_sequence))break;p+=1;k+=1;pointer_sequence+=1}if(p===length_transition){pos_code=pointed_node;last_pointed_node=pointed_node;pos_last_node_char_tested=k}else{if(k===nb_letters)break;lasteQueryWord_size=nb_letters;isSolutionExist=false;pos_last_node_char_tested=0;pos_LastNode=firstNode;break}}}if(k===nb_letters){lasteQueryWord_size=k;pos_LastNode=last_pointed_node;isSolutionExist=true;isExactSolutionFound=true;listSolution.exact_solution=pointed_node}else{isSolutionExist=false;lasteQueryWord_size=nb_letters;pos_last_node_char_tested=0;pos_LastNode=firstNode}nbChar_rest_to_test_inTransition=length_transition-p;test_OneError(trie_info,pattern,nb_letters,k,pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error,isExactSolutionFound);for(var val in list_solution_1error){listSolution.list_solution_1error.push(list_solution_1error[val])}return listSolution};function search_Prefix_by_Suffix_Delete_1error(pattern,lengPrefixCommon,trie_info){var line_table=trie_info.line_table,trie=trie_info.trie,longest_line=trie_info.longest_line,firstNode=trie_info.first_node,listSolution=new exact_and_1err_Solution_nodes(),list_solution_1error={},i=0,p=0,k=0,nb_sequence=0,nb_trans=0,pointer_sequence=0,pointed_node=0,length_transition=0,pos_code=firstNode,last_pointed_node=pointed_node=firstNode,isExactSolutionFound=false,nbChar_rest_to_test_inTransition=0,nb_letters=pattern.length;if(nb_letters===0){lasteQueryWord_size=0;pos_last_node_char_tested=0;pos_LastNode=firstNode;idx_path=0;return listSolution}if(tab_nodes_way===null){tab_nodes_way=new Array(longest_line)}if(branch_charLevels===null){branch_charLevels=new Array(longest_line+1);branch_trans_num=new Array(longest_line+1);branch_nodes=new Array(longest_line+1);branch_node_trans_chunk=new Array(longest_line+1)}if(lengPrefixCommon===0){for(tab_nodes_way_counter=0;tab_nodes_way_counter<longest_line;tab_nodes_way_counter++){tab_nodes_way[tab_nodes_way_counter]=-1}tab_nodes_way_counter=0;tab_nodes_way[tab_nodes_way_counter]=firstNode;pos_last_node_char_tested=0;pos_LastNode=firstNode;idx_path=0}else{if(lengPrefixCommon===lasteQueryWord_size){if(isSolutionExist){k=pos_last_node_char_tested;pos_code=pos_LastNode;last_pointed_node=pointed_node=pos_LastNode}else{lasteQueryWord_size=nb_letters;isSolutionExist=false}}else if(lengPrefixCommon<lasteQueryWord_size){tab_nodes_way_counter=lengPrefixCommon;while(tab_nodes_way[tab_nodes_way_counter]===-1){tab_nodes_way_counter--}pos_code=tab_nodes_way[tab_nodes_way_counter];k=tab_nodes_way_counter;pos_last_node_char_tested=k;last_pointed_node=pointed_node=pos_code;while(tab_nodes_way_counter<longest_line){tab_nodes_way_counter++;tab_nodes_way[tab_nodes_way_counter]=-1}idx_path=0;for(tab_nodes_way_counter=0;tab_nodes_way_counter<=pos_last_node_char_tested;tab_nodes_way_counter++){if(tab_nodes_way[tab_nodes_way_counter]!==-1){idx_path++}}}}while(k<nb_letters){branch_nodes[idx_path]=pos_code;pos_code+=2;nb_trans=trie[pos_code++];for(i=0;i<nb_trans;i++){if(pattern.charAt(k)===trie[pos_code])break;pos_code+=1}branch_charLevels[idx_path]=k;branch_trans_num[idx_path]=i;if(i===nb_trans){branch_node_trans_chunk[idx_path++]=pos_code;break}else{p=i;pos_code+=(nb_trans-i);branch_node_trans_chunk[idx_path++]=pos_code;pos_code+=i*3;pointer_sequence=trie[pos_code++];length_transition=trie[pos_code++];pointed_node=trie[pos_code++];nb_sequence=trie[pointed_node+1];k+=1;pointer_sequence+=1;length_transition-=1;p=0;while(p<length_transition&&k<nb_letters){if(pattern.charAt(k)!==line_table[nb_sequence].charAt(pointer_sequence))break;p+=1;k+=1;pointer_sequence+=1}if(p===length_transition){pos_code=pointed_node;last_pointed_node=pointed_node;pos_last_node_char_tested=k;tab_nodes_way_counter=k;tab_nodes_way[tab_nodes_way_counter]=pos_code}else{if(k===nb_letters)break;lasteQueryWord_size=nb_letters;isSolutionExist=false;pos_last_node_char_tested=0;pos_LastNode=firstNode;break}}}if(k===nb_letters){lasteQueryWord_size=k;pos_LastNode=last_pointed_node;isSolutionExist=true;isExactSolutionFound=true;listSolution.exact_solution=pointed_node}else{isSolutionExist=false;lasteQueryWord_size=nb_letters;pos_last_node_char_tested=0;pos_LastNode=firstNode}nbChar_rest_to_test_inTransition=length_transition-p;test_OneError(trie_info,pattern,nb_letters,k,pointer_sequence,nbChar_rest_to_test_inTransition,pos_code,pointed_node,list_solution_1error,isExactSolutionFound);for(var val in list_solution_1error){listSolution.list_solution_1error.push(list_solution_1error[val])}return listSolution};var my_heap=null;var still_exact_solution=true,my_heap_err,list_words_hash_err;function compare(a,b){if(a.val>b.val)return 1;else if(a.val<b.val)return-1;else return b.str.localeCompare(a.str)};function item(val,data,str){this.val=val;this.data=data;this.str=str};function wordList(trie_info,Last_pointed_node){var line_table=trie_info.line_table,longest_line=trie_info.longest_line,trie=trie_info.trie,limit_leaf=trie_info.limit_leaf,list_words=[],k2,nb_sequence,nb_trans,pos_code,file_last_nodes=new Array(longest_line),file_last_nodes_counter=0,save_pos_code;file_last_nodes[0]=Last_pointed_node;while(file_last_nodes_counter>=0){pos_code=file_last_nodes[file_last_nodes_counter];if(pos_code<limit_leaf){nb_sequence=trie[pos_code+1];list_words.push(line_table[nb_sequence]);file_last_nodes_counter--}else{pos_code+=2;nb_trans=trie[pos_code++];pos_code+=nb_trans;file_last_nodes_counter--;pos_code+=nb_trans*3;save_pos_code=pos_code;pos_code-=1;for(k2=0;k2<nb_trans;k2++){Last_pointed_node=trie[pos_code--];pos_code-=2;file_last_nodes[++file_last_nodes_counter]=Last_pointed_node}pos_code=save_pos_code}}return list_words};function wordList_TopK(trie_info,Last_pointed_node){var line_table=trie_info.line_table,trie=trie_info.trie,limit_leaf=trie_info.limit_leaf,list_words=[],k2,nb_sequence,nb_trans,pos_code,my_heap=new Heap(compare);my_heap.add_item(new item(trie[Last_pointed_node],Last_pointed_node,line_table[trie[Last_pointed_node+1]]));while(my_heap.get_size()>0){pos_code=my_heap.get_top().data;if(pos_code<limit_leaf){nb_sequence=trie[pos_code+1];list_words.push(line_table[nb_sequence]);my_heap.delete_top()}else{pos_code+=2;nb_trans=trie[pos_code++];pos_code+=nb_trans;my_heap.delete_top();for(k2=0;k2<nb_trans;k2++){pos_code+=2;Last_pointed_node=trie[pos_code++];my_heap.add_item(new item(trie[Last_pointed_node],Last_pointed_node,line_table[trie[Last_pointed_node+1]]))}}}return list_words};function wordList_TopK_byGroup(trie_info,Last_pointed_node,topK_Element,isFirstCall){var line_table=trie_info.line_table,trie=trie_info.trie,limit_leaf=trie_info.limit_leaf,list_words=[],k2,nb_sequence,nb_trans,pos_code,idx_TopK;if(isFirstCall){my_heap=new Heap(compare);my_heap.add_item(new item(trie[Last_pointed_node],Last_pointed_node,line_table[trie[Last_pointed_node+1]]))}idx_TopK=0;while(my_heap.get_size()>0&&idx_TopK<topK_Element){pos_code=my_heap.get_top().data;if(pos_code<limit_leaf){nb_sequence=trie[pos_code+1];list_words.push(line_table[nb_sequence]);idx_TopK++;my_heap.delete_top()}else{pos_code+=2;nb_trans=trie[pos_code++];pos_code+=nb_trans;my_heap.delete_top();for(k2=0;k2<nb_trans;k2++){pos_code+=2;Last_pointed_node=trie[pos_code++];my_heap.add_item(new item(trie[Last_pointed_node],Last_pointed_node,line_table[trie[Last_pointed_node+1]]))}}}return list_words};function wordListe_exact_1err(trie_info,listSolutionNodes){var line_table=trie_info.line_table,longest_line=trie_info.longest_line,trie=trie_info.trie,limit_leaf=trie_info.limit_leaf,k2,nb_sequence,nb_trans,pos_code,file_last_nodes=new Array(longest_line),file_last_nodes_counter,save_pos_code,list_words=[],list_words_hash={},i=0,Last_pointed_node,sizeListSolutionNodes=listSolutionNodes.list_solution_1error.length;if(listSolutionNodes.exact_solution>=0){list_words=wordList(trie_info,listSolutionNodes.exact_solution)}for(i=0;i<sizeListSolutionNodes;i++){file_last_nodes_counter=0;file_last_nodes[0]=listSolutionNodes.list_solution_1error[i];while(file_last_nodes_counter>=0){pos_code=file_last_nodes[file_last_nodes_counter];if(pos_code<limit_leaf){nb_sequence=trie[pos_code+1];if(!list_words_hash[line_table[nb_sequence]]){list_words_hash[line_table[nb_sequence]]=line_table[nb_sequence];list_words.push(line_table[nb_sequence])}file_last_nodes_counter--}else{pos_code+=2;nb_trans=trie[pos_code++];pos_code+=nb_trans;file_last_nodes_counter--;pos_code+=nb_trans*3;save_pos_code=pos_code;pos_code-=1;for(k2=0;k2<nb_trans;k2++){Last_pointed_node=trie[pos_code--];pos_code-=2;file_last_nodes[++file_last_nodes_counter]=Last_pointed_node}pos_code=save_pos_code}}}return list_words};function wordList_exact_1err_TopK(trie_info,listSolutionNodes){var line_table=trie_info.line_table,trie=trie_info.trie,limit_leaf=trie_info.limit_leaf,k2,nb_sequence,nb_trans,pos_code,my_heap=new Heap(compare),list_words=[],Last_pointed_node,list_words_hash={};if(listSolutionNodes.exact_solution>=0){list_words=wordList_TopK(trie_info,listSolutionNodes.exact_solution)}var sizeListSolutionNodes=listSolutionNodes.list_solution_1error.length,indice_listSolutionNodes=0;for(indice_listSolutionNodes=0;indice_listSolutionNodes<sizeListSolutionNodes;indice_listSolutionNodes++){Last_pointed_node=listSolutionNodes.list_solution_1error[indice_listSolutionNodes];my_heap.add_item(new item(trie[Last_pointed_node],Last_pointed_node,line_table[trie[Last_pointed_node+1]]))}while(my_heap.get_size()>0){pos_code=my_heap.get_top().data;if(pos_code<limit_leaf){nb_sequence=trie[pos_code+1];if(!list_words_hash[line_table[nb_sequence]]){list_words_hash[line_table[nb_sequence]]=line_table[nb_sequence];list_words.push(line_table[nb_sequence])}my_heap.delete_top()}else{pos_code+=2;nb_trans=trie[pos_code++];pos_code+=nb_trans;my_heap.delete_top();for(k2=0;k2<nb_trans;k2++){pos_code+=2;Last_pointed_node=trie[pos_code++];my_heap.add_item(new item(trie[Last_pointed_node],Last_pointed_node,line_table[trie[Last_pointed_node+1]]))}}}return list_words};function wordList_exact_1err_TopK_byGroup(trie_info,listSolutionNodes,topK_Element,isFirstCall){var line_table=trie_info.line_table,trie=trie_info.trie,limit_leaf=trie_info.limit_leaf,sizeListSolutionNodes=listSolutionNodes.list_solution_1error.length,indice_listSolutionNodes,list_words=[],k2,nb_sequence,nb_trans,pos_code,Last_pointed_node,idx_TopK=0;if(isFirstCall){still_exact_solution=true;my_heap_err=new Heap(compare);list_words_hash_err={};for(indice_listSolutionNodes=0;indice_listSolutionNodes<sizeListSolutionNodes;indice_listSolutionNodes++){Last_pointed_node=listSolutionNodes.list_solution_1error[indice_listSolutionNodes];my_heap_err.add_item(new item(trie[Last_pointed_node],Last_pointed_node,line_table[trie[Last_pointed_node+1]]))}}if(still_exact_solution){if(listSolutionNodes.exact_solution>=0){list_words=wordList_TopK_byGroup(trie_info,listSolutionNodes.exact_solution,topK_Element,isFirstCall);if(list_words.length<topK_Element){still_exact_solution=false}else return list_words}else still_exact_solution=false}while(my_heap_err.get_size()>0&&idx_TopK<topK_Element){pos_code=my_heap_err.get_top().data;if(pos_code<limit_leaf){nb_sequence=trie[pos_code+1];if(!list_words_hash_err[line_table[nb_sequence]]){list_words_hash_err[line_table[nb_sequence]]=line_table[nb_sequence];list_words.push(line_table[nb_sequence])}idx_TopK++;my_heap_err.delete_top()}else{pos_code+=2;nb_trans=trie[pos_code++];pos_code+=nb_trans;my_heap_err.delete_top();for(k2=0;k2<nb_trans;k2++){pos_code+=2;Last_pointed_node=trie[pos_code++];my_heap_err.add_item(new item(trie[Last_pointed_node],Last_pointed_node,line_table[trie[Last_pointed_node+1]]))}}}return list_words};function Heap(compare){if(!compare){Heap.prototype.compare=function(a,b){return a-b}}else Heap.prototype.compare=compare;this.buffer=new Array();Heap.prototype.free_space=function(){this.buffer=null};Heap.prototype.swap=function(idx1,idx2){var tmp=this.buffer[idx1];this.buffer[idx1]=this.buffer[idx2];this.buffer[idx2]=tmp};Heap.prototype.left_child=function(i){return(i+1)*2-1};Heap.prototype.right_child=function(i){return(i+1)*2};Heap.prototype.parent=function(i){return Math.floor((i+1)/2-1)};Heap.prototype.add_item=function(item){var next_pos,pos;pos=this.buffer.length;this.buffer.push(item);while(pos!==0){next_pos=this.parent(pos);if(this.compare(this.buffer[next_pos],this.buffer[pos])>0)break;this.swap(pos,next_pos);pos=next_pos}};Heap.prototype.delete_top=function(){var pos,next_pos,nnext_pos;if(this.buffer.length<=1){this.buffer.length=0;return}this.buffer[0]=this.buffer[this.buffer.length-1];this.buffer.pop();pos=0;for(;;){next_pos=this.left_child(pos);if((next_pos<this.buffer.length)&&(this.compare(this.buffer[next_pos],this.buffer[pos])>0)){nnext_pos=this.right_child(pos);if(nnext_pos>=this.buffer.length){this.swap(pos,next_pos);break}if(this.compare(this.buffer[nnext_pos],this.buffer[next_pos])>0){this.swap(pos,nnext_pos);next_pos=nnext_pos}else this.swap(pos,next_pos)}else{next_pos=this.right_child(pos);if((next_pos<this.buffer.length)&&(this.compare(this.buffer[next_pos],this.buffer[pos])>0)){this.swap(pos,next_pos)}else break}pos=next_pos}};Heap.prototype.get_top=function(){if(this.buffer)return this.buffer[0];return null};Heap.prototype.get_size=function(){if(this.buffer)return this.buffer.length;return 0}}}